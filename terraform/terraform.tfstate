{
  "version": 4,
  "terraform_version": "0.12.20",
  "serial": 48,
  "lineage": "c166a0a0-cbe7-2340-e873-22cab7a9f445",
  "outputs": {
    "private_ip": {
      "value": "172.31.7.29",
      "type": "string"
    },
    "public_ip": {
      "value": "13.53.147.40",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-02605a13632378e79",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2020-02-04T18:52:13.000Z",
            "description": "Canonical, Ubuntu, 18.04 LTS, amd64 bionic image build on 2020-01-31",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0e850e0e9c20d9deb",
            "image_id": "ami-0e850e0e9c20d9deb",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200131",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20200131",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-02605a13632378e79",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "userdata_jenkins_worker_linux",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ec703b56437934ab36c99db179c1323d5979da951f746c4b19088a21cc921b2f",
            "rendered": "#!/bin/bash\n\nset -x\n\nfunction wait_for_jenkins ()\n{\n    echo \"Waiting jenkins to launch on 8080...\"\n\n    while (( 1 )); do\n        echo \"Waiting for Jenkins\"\n\n        nc -zv jenkins-aws.ddns.net 8080\n        if (( $? == 0 )); then\n            break\n        fi\n\n        sleep 10\n    done\n\n    echo \"Jenkins launched\"\n}\n\nfunction slave_setup()\n{\n    # Wait till jar file gets available\n    ret=1\n    while (( $ret != 0 )); do\n        wget -O /opt/jenkins-cli.jar http://jenkins-aws.ddns.net:8080/jnlpJars/jenkins-cli.jar\n        ret=$?\n\n        echo \"jenkins cli ret [$ret]\"\n    done\n\n    ret=1\n    while (( $ret != 0 )); do\n        wget -O /opt/slave.jar http://jenkins-aws.ddns.net:8080/jnlpJars/slave.jar\n        ret=$?\n\n        echo \"jenkins slave ret [$ret]\"\n    done\n    \n    mkdir -p /opt/jenkins-slave\n    chown -R ubuntu:ubuntu /opt/jenkins-slave\n\n    # Register_slave\n    JENKINS_URL=\"http://jenkins-aws.ddns.net:8080\"\n\n    USERNAME=\"deus\"\n    \n    # PASSWORD=$(cat /tmp/secret)\n    PASSWORD=\"1488\"\n\n    SLAVE_IP=$(hostname -I)\n    NODE_NAME='Build_slave'\n    NODE_SLAVE_HOME=\"/opt/jenkins-slave\"\n    EXECUTORS=1\n    SSH_PORT=22\n\n    CRED_ID=\"edu\"\n    LABELS=\"build test linux\"\n    USERID=\"ubuntu\"\n\n    cd /opt\n    # Creating CMD utility for jenkins-cli commands\n    jenkins_cmd=\"java -jar /opt/jenkins-cli.jar -s $JENKINS_URL -auth $USERNAME:$PASSWORD\"\n\n    # Waiting for Jenkins to load all plugins\n    while (( 1 )); do\n\n      count=$($jenkins_cmd list-plugins 2\u003e/dev/null | wc -l)\n      ret=$?\n\n      echo \"count [$count] ret [$ret]\"\n\n      if (( $count \u003e 0 )); then\n          break\n      fi\n\n      sleep 30\n    done\n\n    # For Deleting Node, used when testing\n    $jenkins_cmd delete-node $NODE_NAME\n    \n    # Generating node.xml for creating node on Jenkins server\n    cat \u003e /tmp/node.xml \u003c\u003cEOF\n\u003cslave\u003e\n  \u003cname\u003e$NODE_NAME\u003c/name\u003e\n  \u003cdescription\u003eLinux Slave\u003c/description\u003e\n  \u003cremoteFS\u003e$NODE_SLAVE_HOME\u003c/remoteFS\u003e\n  \u003cnumExecutors\u003e$EXECUTORS\u003c/numExecutors\u003e\n  \u003cmode\u003eNORMAL\u003c/mode\u003e\n  \u003cretentionStrategy class=\"hudson.slaves.RetentionStrategy\\$Always\"/\u003e\n  \u003clauncher class=\"hudson.plugins.sshslaves.SSHLauncher\" plugin=\"ssh-slaves@1.5\"\u003e\n    \u003chost\u003e$SLAVE_IP\u003c/host\u003e\n    \u003cport\u003e$SSH_PORT\u003c/port\u003e\n    \u003ccredentialsId\u003e$CRED_ID\u003c/credentialsId\u003e\n  \u003c/launcher\u003e\n  \u003clabel\u003e$LABELS\u003c/label\u003e\n  \u003cnodeProperties/\u003e\n  \u003cuserId\u003e$USERID\u003c/userId\u003e\n\u003c/slave\u003e\nEOF\n\n  sleep 10\n  \n  # Creating node using node.xml\n  cat /tmp/node.xml | $jenkins_cmd create-node $NODE_NAME\n}\n\n### script begins here ###\n\nsudo apt update\nsudo apt install -y openjdk-8-jre\n\nwait_for_jenkins\n\nslave_setup\n\necho \"Done\"\nexit 0\n",
            "template": "#!/bin/bash\n\nset -x\n\nfunction wait_for_jenkins ()\n{\n    echo \"Waiting jenkins to launch on 8080...\"\n\n    while (( 1 )); do\n        echo \"Waiting for Jenkins\"\n\n        nc -zv ${JENKINS_IP} 8080\n        if (( $? == 0 )); then\n            break\n        fi\n\n        sleep 10\n    done\n\n    echo \"Jenkins launched\"\n}\n\nfunction slave_setup()\n{\n    # Wait till jar file gets available\n    ret=1\n    while (( $ret != 0 )); do\n        wget -O /opt/jenkins-cli.jar http://${JENKINS_IP}:8080/jnlpJars/jenkins-cli.jar\n        ret=$?\n\n        echo \"jenkins cli ret [$ret]\"\n    done\n\n    ret=1\n    while (( $ret != 0 )); do\n        wget -O /opt/slave.jar http://${JENKINS_IP}:8080/jnlpJars/slave.jar\n        ret=$?\n\n        echo \"jenkins slave ret [$ret]\"\n    done\n    \n    mkdir -p /opt/jenkins-slave\n    chown -R ubuntu:ubuntu /opt/jenkins-slave\n\n    # Register_slave\n    JENKINS_URL=\"http://${JENKINS_IP}:8080\"\n\n    USERNAME=\"${JENKINS_USER}\"\n    \n    # PASSWORD=$(cat /tmp/secret)\n    PASSWORD=\"${JENKINS_PASS}\"\n\n    SLAVE_IP=$(hostname -I)\n    NODE_NAME='Build_slave'\n    NODE_SLAVE_HOME=\"/opt/jenkins-slave\"\n    EXECUTORS=1\n    SSH_PORT=22\n\n    CRED_ID=\"edu\"\n    LABELS=\"build test linux\"\n    USERID=\"ubuntu\"\n\n    cd /opt\n    # Creating CMD utility for jenkins-cli commands\n    jenkins_cmd=\"java -jar /opt/jenkins-cli.jar -s $JENKINS_URL -auth $USERNAME:$PASSWORD\"\n\n    # Waiting for Jenkins to load all plugins\n    while (( 1 )); do\n\n      count=$($jenkins_cmd list-plugins 2\u003e/dev/null | wc -l)\n      ret=$?\n\n      echo \"count [$count] ret [$ret]\"\n\n      if (( $count \u003e 0 )); then\n          break\n      fi\n\n      sleep 30\n    done\n\n    # For Deleting Node, used when testing\n    $jenkins_cmd delete-node $NODE_NAME\n    \n    # Generating node.xml for creating node on Jenkins server\n    cat \u003e /tmp/node.xml \u003c\u003cEOF\n\u003cslave\u003e\n  \u003cname\u003e$NODE_NAME\u003c/name\u003e\n  \u003cdescription\u003eLinux Slave\u003c/description\u003e\n  \u003cremoteFS\u003e$NODE_SLAVE_HOME\u003c/remoteFS\u003e\n  \u003cnumExecutors\u003e$EXECUTORS\u003c/numExecutors\u003e\n  \u003cmode\u003eNORMAL\u003c/mode\u003e\n  \u003cretentionStrategy class=\"hudson.slaves.RetentionStrategy\\$Always\"/\u003e\n  \u003clauncher class=\"hudson.plugins.sshslaves.SSHLauncher\" plugin=\"ssh-slaves@1.5\"\u003e\n    \u003chost\u003e$SLAVE_IP\u003c/host\u003e\n    \u003cport\u003e$SSH_PORT\u003c/port\u003e\n    \u003ccredentialsId\u003e$CRED_ID\u003c/credentialsId\u003e\n  \u003c/launcher\u003e\n  \u003clabel\u003e$LABELS\u003c/label\u003e\n  \u003cnodeProperties/\u003e\n  \u003cuserId\u003e$USERID\u003c/userId\u003e\n\u003c/slave\u003e\nEOF\n\n  sleep 10\n  \n  # Creating node using node.xml\n  cat /tmp/node.xml | $jenkins_cmd create-node $NODE_NAME\n}\n\n### script begins here ###\n\nsudo apt update\nsudo apt install -y openjdk-8-jre\n\nwait_for_jenkins\n\nslave_setup\n\necho \"Done\"\nexit 0\n",
            "vars": {
              "JENKINS_IP": "jenkins-aws.ddns.net",
              "JENKINS_PASS": "1488",
              "JENKINS_USER": "deus"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "web",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0e850e0e9c20d9deb",
            "arn": "arn:aws:ec2:eu-north-1:261893899167:instance/i-07c555842913f0657",
            "associate_public_ip_address": true,
            "availability_zone": "eu-north-1c",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-07c555842913f0657",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "edu",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0c1ccb38a1f9fa3e9",
            "private_dns": "ip-172-31-7-29.eu-north-1.compute.internal",
            "private_ip": "172.31.7.29",
            "public_dns": "ec2-13-53-147-40.eu-north-1.compute.amazonaws.com",
            "public_ip": "13.53.147.40",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "volume_id": "vol-0a6d5eb3fc3583b4b",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "allow_ssh"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-618b972b",
            "tags": {
              "Name": "Terraform Slave"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "2d4528042d389a7cbd2956964820ee24f6ebf063",
            "user_data_base64": null,
            "volume_tags": {},
            "vpc_security_group_ids": [
              "sg-01e3520b9bc1aafdb"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.allow_ssh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "allow_ssh",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-north-1:261893899167:security-group/sg-01e3520b9bc1aafdb",
            "description": "Allow ssh connections",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-01e3520b9bc1aafdb",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "allow_ssh",
            "name_prefix": null,
            "owner_id": "261893899167",
            "revoke_rules_on_delete": false,
            "tags": {},
            "timeouts": null,
            "vpc_id": "vpc-abfc21c2"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ]
}
